{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid_img.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covidImg","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66bd3f58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3lu5f\",\"card\":\"Cards_card__1g4VR\",\"infected\":\"Cards_infected__1Qw95\",\"recovered\":\"Cards_recovered__1qsVc\",\"deaths\":\"Cards_deaths__g5QzG\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n        \r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n\r\n            <Typography variant=\"h5\">\r\n            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n\r\n            <Typography variant=\"h5\">\r\n            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\">Number of recovered cases from COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        //object destructuring\r\n        const {data : {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    \r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async ()=> {\r\n\r\n    try {\r\n\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\r\n    try{\r\n        const {data :{countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country)=>country.name)\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({data :{confirmed, deaths, recovered}, country}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = (dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0 , 0.5 )\",\r\n            fill: true\r\n          }\r\n        ],\r\n      }}\r\n    />) : null\r\n    );\r\n\r\n\r\n    const barChart = (\r\n      confirmed ? (<Bar \r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [{\r\n          label:'People',\r\n          backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],        \r\n          data: [confirmed.value, recovered.value, deaths.value]\r\n      }]\r\n    }}\r\n      options ={{\r\n        legend: {display:false},\r\n        title: {display:true, text:`Current State in ${country}` },\r\n        \r\n      }}\r\n      />\r\n        \r\n      ) : null\r\n    );\r\n\r\n  return (<div className={styles.container}>\r\n    {country ? barChart : lineChart}\r\n    </div>)\r\n    }\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker =({handleCountryChange}) =>{\r\n    const [fetchedCountries, setFetchedCountries] =useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI =async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    console.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect default=\"\" onChange ={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Worldwide</option>\r\n                {fetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport covidImg from './images/covid_img.png'\r\n\r\n/* Shows a Line Chart for Worldwide and Bar chart for Individual countr */\r\n\r\nclass App extends React.Component {\r\n\r\n//Don't need React constructor since below will immediately constructed in the React back end\r\n    state = {\r\n        //Since App is parent component of both Cards, Charts, country picker\r\n        data : {},\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount (){\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data : fetchedData});\r\n    \r\n    }\r\n\r\n    handleCountryChange = async (country)=>{\r\n        //fetch the data then set the state\r\n        const fetchedData = await fetchData(country);\r\n        \r\n        this.setState({ data : fetchedData, country: country});\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n            <img className ={styles.image} src = {covidImg} alt=\"COVID-19 img\"/>\r\n            <Cards data={ data }/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Chart data={data} country={country}/>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3kQvr\",\"image\":\"App_image__2ZPdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1qwX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__LGCWc\"};","module.exports = __webpack_public_path__ + \"static/media/covid_img.d7265326.png\";"],"sourceRoot":""}